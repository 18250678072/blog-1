[
  {
    "title": "40 行代码实现精简版 koa",
    "path": "koa",
    "date": "2020-03-14 16:10",
    "description": "当我们在深入学习一个框架或者库时，为了了解它的思想及设计思路，也为了更好地使用和避免无意的 Bug，有时很有必要研究源码。对于 koa 这种极为简单，而应用却很广泛的框架/库更应该了解它的源码。"
  },
  {
    "title": "异步资源监听中的 async_hooks 与 CLS",
    "path": "cls",
    "date": "2020-03-20 20:01",
    "description": "为什么需要监听异步资源？在一个 Node 应用中，异步资源监听使用场景最多的地方在于：异常捕捉时需要提供用户信息，在每次客户端请求中保持一致的用户信息"
  }
]
